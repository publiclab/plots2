<div style="padding:10px;">
<%= form_for @user, :url => {:controller => 'users', :action => @action}, :html => {:class => "row"} do |f| %>

  <% if f.error_messages != "" %><div class="alert alert-danger"><%= f.error_messages %></div><% end %>

  <div class="col-lg-8 col-md-10 col-sm-10">
    <% if params[:controller] == "users" && @action == "create" %>
    <div class='col-lg-10 col-md-10 col-sm-10' style="display:flex; justify-content: center;">
      <h3> Sign up with </h3>
    </div>

    <div class='col-lg-10 col-md-10 col-sm-10' style="display:flex; justify-content: center;">
      <%= render :partial => "layouts/social_icons" %>
    </div>
    
    <br style="clear:both;"/>
    
    <div id="toggle">
      <div class="form-group">

        <label for="username"><%= t('users._form.username') %></label>
        <%= f.text_field :username, { tabindex: 1, class: 'form-control', id: 'username' } %>
  
        <input type="hidden" name="id" value="<%= @user.username %>" />
        
        <div class='validate' id="username-valid" style="color: red; padding-top:5px" ></div>
      </div>
      
      <% end %>
  
      <div class="form-group">
       <% if Rails.env == "production" %>
       <% if params[:controller] == "users" && params[:action] == "edit" %>
      <div class='col-lg-8 col-md-10 col-sm-10' style="display:flex; justify-content: flex-start; padding: 0;">
        <label> Link your Public Lab account to providers </label>
      </div>
      <div class='col-lg-8 col-md-10 col-sm-10' style="display:flex; justify-content: flex-start; padding: 0; margin-bottom: 10px;">
        <%= render :partial => "layouts/social_icons" %>
      </div>
      <% end %>
      <% end %>
      <br style="clear:both;"/>
  
      <label for="email"><%= t('users._form.email') %></label>
      <%= f.text_field :email, { tabindex: 3, placeholder: "you@email.com", class: 'form-control', id: 'email' } %>

      <div class='validate' id='email-valid' style='color: red; padding-top: 5px;'></div>
      </div>
  
  
      <div class="form-group">
        <% if @user.crypted_password.nil? %>
          <label for="password"><%= t('users._form.create_password') %></label>
        <% else %>
          <label for="password"><%= t('users._form.change_password') %></label>
        <% end %>
        <%= f.password_field :password, { placeholder: I18n.t('users._form.password'),
                                          tabindex: 4,
                                          class: 'form-control',
                                          id: 'password' }
        %>
      </div>
  
      <div class="form-group">
        <label for="password_confirmation"><%= t('users._form.confirmation') %></label>
        <%= f.password_field :password_confirmation, { placeholder: I18n.t('users._form.confirm_password'),
                                                       tabindex: 5,
                                                       class: 'form-control',
                                                       id: 'password-confirmation',
                                                       disabled: ''}
        %>
      </div>
      <div class='validate' id='password-match' style='padding-top: 5px'></div>
    </div>

    <div class="form-group">
      <label for="user_bio"><%= t('users._form.bio') %></label>
      <%= f.text_area :bio, { placeholder: I18n.t('users._form.add_bio'),
                                          rows: 8,
                                          class: 'form-control',
                                          tabindex: 6 }
      %>
    </div>


    <% if params[:controller] == "users" && (params[:action] == "new" || params[:action] == "create") %>

      <% if Rails.env == "production" && !params[:spamaway] %>

        <%= recaptcha_tags %>
        <p>If you cannot use the ReCaptcha to verify you are not a bot, <a href="/signup?spamaway=true">use this alternative verification</a>.</p>

        <script>
          var publicSpamCompleted = false;
          function recaptchaSuccess() {
            publicSpamCompleted = true;
            console.log("Test: ReCaptcha submitted successfully");
            publicSpamCompletedChange();
          }
          function recaptchaExpired() {
            publicSpamCompleted = false;
            console.log("Test: ReCaptcha expired.")
          }
          $(document).ready(function() {
            $('.g-recaptcha').attr({'data-callback': 'recaptchaSuccess', 'data-expired-callback': 'recaptchaExpire'});
          });
          
          function publicSpamCompletedChange() {
            if (!publicSpamCompleted) {
              $('.g-recaptcha').find('iframe').css('border', '1px red solid');
            }
            else {
              $('.g-recaptcha').find('iframe').css('border', '');
            }
          }
          
          function publicSpamScroll() {
            offset = $('.g-recaptcha').offset();
            $('html, body').animate({
              scrollTop: offset.top - $(window).height() / 2
            });
          }
        </script>
      <% else %>

        <%= render partial: 'spamaway', locals: { spamaway: @spamaway } %>
        
        <script>
          var publicSpamCompleted = false;
          var publicHasSubmitted = false;
          (function() {

            var btnClicked = new Array(4).fill(false);
            var btnArray = $('.spamaway .btn-group-justified');
            $('.spamaway').on('click', '.btn-group-justified', function(e) {
              var i = btnArray.index($(this));
              if(!btnClicked[i]) {
                btnClicked[i] = true;
                console.log(btnClicked);
                publicSpamCompleted = btnClicked.every(function(clicked) {return clicked == true});
                console.log(publicSpamCompleted);
              }
              if(publicHasSubmitted) {
                publicSpamCompletedChange();
              }
            });
            
            function publicSpamReset() {
              $('.spamaway button').each( function() {
                $(this).find('input').prop('checked', false);
              });
            }
            
            $(document).ready(function() {
              publicSpamReset();
            });
          })();
          
          function publicSpamCompletedChange() {
              if(!publicSpamCompleted) {
                $('.spamaway').css({'border': '1px solid red', 'padding': '1px', 'borderRadius': '5px'});
              }
              else {
                $('.spamaway').css({'border': '', 'padding': '', 'borderRadius': ''});
              }
          }
          
          function publicSpamScroll() {
            offset = $('.spamaway').offset();
            $('html, body').animate({
              scrollTop: offset.top - $(window).height() / 2
            });
          }
        </script>

      <% end %>

      <script>
        (function() {
          $('.spamaway button').click(function(e) {
            $(this).find('input').prop('checked', true);
          })
        })();
      </script>

    <% end %>

    <div class="form-group form-inline" style="clear:both;padding-top:10px;">

      <% if params[:controller] == "users" && (params[:action] == "new" || params[:action] == "create") %>

        <!-- button for creating new users -->
        <button class="btn btn-lg btn-primary btn-save" type="submit" tabindex="7"><%= t('users._form.sign_up') %></button>
        <a class="btn btn-lg btn-default" href="/login"><%= t('users._form.log_in') %></a>

      <% elsif params[:controller] == "users" && params[:action] == "edit" %>

        <!-- button for saving edits for existing users -->
        <button class="btn btn-lg btn-primary btn-save" type="submit" tabindex="7"><%= t('users._form.save') %></button>

      <% end %>

      <script>
        (function() {
          $('.btn-save').click(function onClick(e) {
            publicHasSubmitted = true;
            var validated = true;
            var hasScrolled = false; 
            $('.form-control').trigger('keyup'); //Prevents bypassing check when all fields have not been touched
            $('.validate').each(function() {  
              if($(this).html() != '' && !this.classList.contains('chk')) { //Check that all messages are clear
                e.preventDefault();
                validated = false;
                hasScrolled = true;
                var offset = $(this).offset();
                $('html, body').animate({
                  scrollTop: offset.top - $(window).height() / 2
                }, 500);
                $(this).parent().find('input').focus();
                return false;
              } 
              
              
            });
            
            if (!publicSpamCompleted) {
              e.preventDefault();
              publicSpamCompletedChange();
              if(!hasScrolled) {
                publicSpamScroll();
              }
            }
            else {
              $(this).addClass("disabled") // disable the button after it is clicked
                     .html("<i class='fa fa-spinner fa-spin'></i>"); // make a spinner that spins when clicked
            }
          });
        })();

        (function() {
          var passwordValid;
          
          //Check validity of username
          $('#username').on('keyup', function() {
            //Username Requirements:
            //At least 3 characters
            //Only numbers, letters, spaces, and .-_@+
            var username = $('#username').val();
            $('#username-valid').html("");
            var tooShort = (username.length < 3);
            var invalidChars = !(new RegExp("^[a-zA-Z0-9-+@_.]+$").test(username)) && username.length != 0;
            
            if(tooShort || invalidChars) {
              if(tooShort)     $('#username-valid').append('Username is too short (minimum is 3 characters).<br>');
              if(invalidChars) $('#username-valid').append('Username should use only letters, numbers, spaces, and .-_@+ please.');
              $('#username').css('borderColor', 'red');
            }
            else {
              $('#username').css('borderColor', '');
            }
          });
          
          //Check validity of email
          $('#email').on('keyup', function() {
            //Email Regex
            var emailRegex = /^(([^<>()[\]\\.,;:\s@\"]+(\.[^<>()[\]\\.,;:\s@\"]+)*)|(\".+\"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
            if(!emailRegex.test($('#email').val())) {
              $('#email').css('borderColor', 'red');
              $('#email-valid').html('Email is invalid.');
            }
            else {
              $('#email').css('borderColor', '');
              $('#email-valid').html('');
            }
          });
          
          //Check validity of password
          $('#password').on('keyup', function() {
            //Password Requirement: 
            //At least 8 chars
            if($('#password').val().length < 8) {
              $('#password-valid').html("Password is too short (minimum is 8 characters).");
              $('#password').css('borderColor', 'red');
              passwordValid = false;
              $('#password-confirmation').val('').prop('disabled', true);
            }
            else {
              $('#password-valid').html("");
              $('#password').css('borderColor', '');
              passwordValid = true;
              $('#password-confirmation').prop('disabled', false);
            }
          });
          
          //Check if passwords match; only checks when password is valid
          $('#password, #password-confirmation').on('keyup', function () {
            if(passwordValid) {
              if ($('#password').val() == $('#password-confirmation').val()) {
                $('#password-match').html('&#10004 Passwords Match').css('color', 'green').toggleClass('chk', true);
                $('#password, #password-confirmation').css('borderColor', 'green');
                
              } 
              else {
                $('#password-match').html('&#10008 Passwords Do Not Match').css('color', 'red').toggleClass('chk', false);
                $('#password, #password-confirmation').css('borderColor', 'red');
              }
            }
            else {
              $('#password-match').html('');
              $('#password-confirmation').css('borderColor', '');
            }
          });
        })();
      </script>

    </div>

  </div>

  <div class="col-md-2">
    <%= render :partial => 'users/photo' %>
  </div>

  </div>

  <% end %>
</div>
