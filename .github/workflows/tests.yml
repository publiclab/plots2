name: tests
on: [pull_request]
jobs:

  unit-tests:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: ruby/setup-ruby@v1
      with:
        ruby-version: 2.6 # Not needed with a .ruby-version file
        bundler-cache: true # runs 'bundle install' and caches installed gems automatically (not working?)
    - uses: ./.github/actions/setup-test-environment
    - name: "Unit Tests"
      env:
        RAILS_ENV: test
        DB_PASSWORD: root
        DB_PORT: ${{ job.services.mysql.ports[3306] }}
      run: bundle exec rails test test/unit

  functional-tests:
    runs-on: ubuntu-latest
    services:
      redis:
        image: redis
        # Set health checks to wait until redis has started
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps port 6379 on service container to the host
          - 6379:6379
    steps:
    - uses: actions/checkout@v2
    - uses: ruby/setup-ruby@v1
      with:
        ruby-version: 2.6 # Not needed with a .ruby-version file
        bundler-cache: true # runs 'bundle install' and caches installed gems automatically (not working?)
    - uses: ./.github/actions/setup-test-environment
    - name: Install JavaScript dependencies with Yarn
      run: yarn check || yarn install --frozen-lockfile;
    - name: Run webpacker setup
      env:
        RAILS_ENV: test
        DB_PASSWORD: root
        DB_PORT: ${{ job.services.mysql.ports[3306] }}
      run: bundle exec rails g webpack:install && bundle exec rails g webpack:install:react && bundle exec rails g react:install
    - name: "Functional Tests"
      env:
        RAILS_ENV: test
        DB_PASSWORD: root
        DB_PORT: ${{ job.services.mysql.ports[3306] }}
      run: bundle exec rails test test/functional

  integration-tests:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: ruby/setup-ruby@v1
      with:
        ruby-version: 2.6 # Not needed with a .ruby-version file
        bundler-cache: true # runs 'bundle install' and caches installed gems automatically (not working?)
    - uses: ./.github/actions/setup-test-environment
    - name: Install JavaScript dependencies with Yarn
      run: yarn check || yarn install --frozen-lockfile;
    - name: Run webpacker setup
      env:
        RAILS_ENV: test
        DB_PASSWORD: root
        DB_PORT: ${{ job.services.mysql.ports[3306] }}
      run: bundle exec rails g webpack:install && bundle exec rails g webpack:install:react && bundle exec rails g react:install
    - name: "Integration Tests"
      env:
        RAILS_ENV: test
        DB_PASSWORD: root
        DB_PORT: ${{ job.services.mysql.ports[3306] }}
      run: bundle exec rails test test/integration

  system-tests:
    runs-on: ubuntu-latest
    services:
      redis:
        image: redis
        # Set health checks to wait until redis has started
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps port 6379 on service container to the host
          - 6379:6379
    steps:
    - uses: actions/checkout@v2
    - uses: ruby/setup-ruby@v1
      with:
        ruby-version: 2.6 # Not needed with a .ruby-version file
        bundler-cache: true # runs 'bundle install' and caches installed gems automatically (not working?)
    - uses: nanasess/setup-chromedriver@v1.0.1
    - uses: ./.github/actions/setup-test-environment
    - name: Install JavaScript dependencies with Yarn
      run: yarn check || yarn install --frozen-lockfile;
    - name: Run webpacker setup
      env:
        RAILS_ENV: test
        DB_PASSWORD: root
        DB_PORT: ${{ job.services.mysql.ports[3306] }}
      run: bundle exec rails g webpack:install && bundle exec rails g webpack:install:react && bundle exec rails g react:install
    - name: "System Tests"
      env:
        RAILS_ENV: test
        DB_PASSWORD: root
        DB_PORT: ${{ job.services.mysql.ports[3306] }}
        REDIS_HOST: localhost
        REDIS_PORT: 6379
      run: |
        export DISPLAY=:99
        chromedriver --url-base=/wd/hub &
        bundle exec rails test:system
